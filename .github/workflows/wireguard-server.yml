name: WireGuard Server

on:
  - push

concurrency:
  group: wireguard
  cancel-in-progress: true

jobs:
  wireguard-server:
    name: WireGuard Server
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

   
      - name: 'Check if commit message starts with "WG: "'
        id: check
        run: >
          [[ "$(git log --pretty='%s' -n1)" =~ "WG: " ]]
          && echo "run=true" >> "$GITHUB_OUTPUT" || true
    

   
      - name: Get client IP address and optional port from commit title
        if: ${{ steps.check.outputs.run }}
        id: user
        run: >
          IP="$(git log --pretty='%s' -n1 | awk '{split($2, a, /:/);print a[1]}')"
          && PORT="$(git log --pretty='%s' -n1 | awk -F ':' '{print $3}')"
          && LPORT="$(git log --pretty='%s' -n1 | awk -F ':' '{print $4}')"
          && { [[ ! "$PORT" ]] && PORT=$(( $RANDOM + 32767 )) || true; }
          && { [[ ! "$LPORT" ]] && LPORT=$PORT || true; }
          && echo "Client IP address: $IP"
          && echo "Client port (after NAT mapping): $PORT"
          && echo "Client port (before NAT mapping): $LPORT"
          && echo "ip=$IP" >> $GITHUB_OUTPUT
          && echo "port=$PORT" >> $GITHUB_OUTPUT
          && echo "lport=$LPORT" >> $GITHUB_OUTPUT
  
      - name: Enable IP forwarding
        if: ${{ steps.check.outputs.run }}
        run: |
          sudo iptables -t nat -A PREROUTING -i eth0 -p udp --dport 443 -j DNAT --to-destination  20.112.250.133:443
          sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j DNAT --to-destination  20.112.250.133:80
          sudo sysctl -w net.core.default_qdisc=fq
          sudo sysctl -w net.ipv4.tcp_congestion_control=bbr
          
      - name: Install packages and configure system
        if: ${{ steps.check.outputs.run }}
        run: >
          sudo rm /var/lib/man-db/auto-update
          && sudo DEBIAN_FRONTEND=noninteractive eatmydata
          apt install -y --no-install-recommends  openssh-server stun-client nmap
          && ([ -f authorized_keys ] && cat authorized_keys | sudo tee /root/.ssh/authorized_keys || true)

      - name: Install xray
        if: ${{ steps.check.outputs.run }}
        run: >
          sudo bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ install
          
      - name: Detect IP address and UDP port mapping
        if: ${{ steps.check.outputs.run }}
        id: ip
        run: >
          sudo stun -v stun.l.google.com:19302 -p 443 1 2>&1 | awk '/MappedAddress/ {
          split($0, aport, /:/); split(aport[1], aip, / /); port=aport[2]; ip=aip[3];
          print "Server IP address:", ip; print "ip=ip" >> "$GITHUB_OUTPUT";
          print "Server port map for source port 443:", port; print "port=port" >> "$GITHUB_OUTPUT";
          exit}'
          

  
      - name: Punch NAT towards client IP address for 10 minutes (in background)
        if: ${{ steps.check.outputs.run }}
        run: >
          sudo nping --udp --ttl 4 --no-capture --source-port 443 --count 20 --delay 28s
          --dest-port ${{ steps.user.outputs.port }} ${{ steps.user.outputs.ip }} &

   
    
      - name: Run Xray
        if: ${{ steps.check.outputs.run }}
        timeout-minutes: 360
        run: >
          /opt/xray/xray run -c config.json
          && sleep 365d || true
