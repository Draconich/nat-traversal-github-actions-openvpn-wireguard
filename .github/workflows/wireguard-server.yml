name: WireGuard Server

on:
  - push

concurrency:
  group: wireguard
  cancel-in-progress: true

jobs:
  wireguard-server:
    name: WireGuard Server
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

   
      - name: 'Check if commit message starts with "WG: "'
        id: check
        run: >
          [[ "$(git log --pretty='%s' -n1)" =~ "WG: " ]]
          && echo "run=true" >> "$GITHUB_OUTPUT" || true
    

   
      - name: Get client IP address and optional port from commit title
        if: ${{ steps.check.outputs.run }}
        id: user
        run: >
          IP="$(git log --pretty='%s' -n1 | awk '{split($2, a, /:/);print a[1]}')"
          && PORT="$(git log --pretty='%s' -n1 | awk -F ':' '{print $3}')"
          && LPORT="$(git log --pretty='%s' -n1 | awk -F ':' '{print $4}')"
          && { [[ ! "$PORT" ]] && PORT=$(( $RANDOM + 32767 )) || true; }
          && { [[ ! "$LPORT" ]] && LPORT=$PORT || true; }
          && echo "Client IP address: $IP"
          && echo "Client port (after NAT mapping): $PORT"
          && echo "Client port (before NAT mapping): $LPORT"
          && echo "ip=$IP" >> $GITHUB_OUTPUT
          && echo "port=$PORT" >> $GITHUB_OUTPUT
          && echo "lport=$LPORT" >> $GITHUB_OUTPUT
  

      - name: Install packages and configure system
        if: ${{ steps.check.outputs.run }}
        run: >
          sudo rm /var/lib/man-db/auto-update
          && sudo DEBIAN_FRONTEND=noninteractive eatmydata
          apt install -y --no-install-recommends wireguard openssh-server stun-client nmap
          && ([ -f authorized_keys ] && cat authorized_keys | sudo tee /root/.ssh/authorized_keys || true)

    
      - name: Detect IP address and UDP port mapping
        if: ${{ steps.check.outputs.run }}
        id: ip
        run: >
          sudo stun -v stun.l.google.com:19302 -p 443 1 2>&1 | awk '/MappedAddress/ {
          split($0, aport, /:/); split(aport[1], aip, / /); port=aport[2]; ip=aip[3];
          print "Server IP address:", ip; print "ip=ip" >> "$GITHUB_OUTPUT";
          print "Server port map for source port 443:", port; print "port=port" >> "$GITHUB_OUTPUT";
          exit}'
          

  
      - name: Punch NAT towards client IP address for 10 minutes (in background)
        if: ${{ steps.check.outputs.run }}
        run: >
          sudo nping --udp --ttl 4 --no-capture --source-port 443 --count 20 --delay 28s
          --dest-port ${{ steps.user.outputs.port }} ${{ steps.user.outputs.ip }} &


      - name: Configure WireGuard
        if: ${{ steps.check.outputs.run }}
        run: >
          wg genkey | tee privatekey | wg pubkey > publickey
          && wg genkey | tee privatekey_peer | wg pubkey > publickey_peer
          && sudo ip link add dev wg0 type wireguard
          && sudo ip address add dev wg0 192.168.166.1/30
          && sudo wg set wg0 listen-port 443 private-key privatekey peer $(cat publickey_peer)
          allowed-ips 192.168.166.2/32

    
      - name: Print WireGuard configuration file
        if: ${{ steps.check.outputs.run }}
        run: |
          echo "Save the following as 'github.conf', connect with: sudo wg-quick up ./github.conf"
          echo "Do not forget to disconnect with: sudo wg-quick down ./github.conf"
          echo "[Interface]
          ListenPort = ${{ steps.user.outputs.lport }}
          Address = 192.168.166.2/30
          PrivateKey = $(cat privatekey_peer)

          [Peer]
          PublicKey = $(cat publickey)
          Endpoint = ${{ steps.ip.outputs.ip }}:${{ steps.ip.outputs.port }}
          AllowedIPs = 192.168.166.1/32
          PersistentKeepalive = 25"
          echo
          echo "Connect to the server's SSH with: ssh root@192.168.166.1"
          echo
          echo "Configuration for onetun:"
          echo onetun --endpoint-addr ${{ steps.ip.outputs.ip }}:${{ steps.ip.outputs.port }} \
          --endpoint-public-key $(cat publickey) --private-key $(cat privatekey_peer) \
          --source-peer-ip 192.168.166.2 --endpoint-bind-addr 0.0.0.0:${{ steps.user.outputs.lport }} \
          --keep-alive 25 2222:192.168.166.1:22
          echo
          echo "Connect to the server's SSH with: ssh -p 2222 root@127.0.0.1"

      # WireGuard is configured to run on UDP port 443.
      - name: Run WireGuard
        if: ${{ steps.check.outputs.run }}
        timeout-minutes: 360
        run: >
          sudo ip link set dev wg0 up
          && sleep 365d || true
