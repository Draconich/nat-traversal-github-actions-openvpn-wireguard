name: Xray

on:
  - push

concurrency:
  group: xray
  cancel-in-progress: true

jobs:
  xray:
    name: Xray
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Check if commit message starts with "XR: "'
        id: check
        run: >
          [[ "$(git log --pretty='%s' -n1)" =~ "XR: " ]]
          && echo "run=true" >> "$GITHUB_OUTPUT" || true

      - name: Connect to ssh-j
        if: ${{ steps.check.outputs.run }}
        run: >
         ssh -f -o StrictHostKeyChecking=accept-new -o ExitOnForwardFailure=yes supercoollogin@ssh-j.com -N -R github:22:localhost:22
          
      - name: Set up secret file
        env:
          UUID: ${{ secrets.UUID }}
        run: |
          echo $UUID >> uuid.txt
          sed -i 's/"id": "[^"]*"/"id": "'$(cat uuid.txt)'"/' ./bridge-warp.json

      - name: Make sure binaries are executable, get xray and CF WARP
        if: ${{ steps.check.outputs.run }}
        run: |
          curl -L https://github.com/XTLS/Xray-core/releases/download/v1.8.23/Xray-linux-64.zip -o xray.zip
          unzip xray.zip
          sudo chmod +x xray wgcf
          ./wgcf register --accept-tos
          ./wgcf generate

      - name: Get client IP address and optional port from commit title
        if: ${{ steps.check.outputs.run }}
        id: user
        run: >
          IP="$(git log --pretty='%s' -n1 | awk '{split($2, a, /:/);print a[1]}')"
          && PORT="$(git log --pretty='%s' -n1 | awk -F ':' '{print $3}')"
          && echo "Client IP address: $IP"
          && echo "Client port (after NAT mapping): $PORT"
          && echo "ip=$IP" >> $GITHUB_OUTPUT
          && echo "port=$PORT" >> $GITHUB_OUTPUT


      - name: Optimize network settings
        if: ${{ steps.check.outputs.run }}
        run: |
          sudo sysctl -w net.core.default_qdisc=fq
          sudo sysctl -w net.ipv4.tcp_congestion_control=bbr

      - name: Update Xray config with WireGuard details
        run: |
         # Extract values from wgcf-profile.conf
         PRIVATE_KEY=$(grep '^PrivateKey' wgcf-profile.conf | cut -d '=' -f2 | tr -d ' ')
         WG_ADDRESSES=$(grep '^Address' wgcf-profile.conf | cut -d '=' -f2 | tr -d ' ' | paste -sd ',' -)
         PUBLIC_KEY=$(grep '^PublicKey' wgcf-profile.conf | cut -d '=' -f2 | tr -d ' ')
         ENDPOINT=$(grep '^Endpoint' wgcf-profile.conf | cut -d '=' -f2 | tr -d ' ')
    
         # Perform replacements in bridge-warp.json
         sed -i \
          -e "s|\"secretKey\": \"PRIVATE\"|\"secretKey\": \"$PRIVATE_KEY\"|" \
          -e "/\"protocol\": \"wireguard\"/,/\"tag\"/s|\"address\": \[[^]]*\]|\"address\": [\"${WG_ADDRESSES//,/\",\"}\"]|" \
          -e "s|\"publicKey\": \"PUBLIC\"|\"publicKey\": \"$PUBLIC_KEY\"|" \
          -e "s|\"endpoint\": \"[^\"]*\"|\"endpoint\": \"$ENDPOINT\"|" \
           bridge-warp.json

         sed -i '/"vnext": \[/,/\]/s/"address": "[^"]*",/"address": "${{ steps.user.outputs.ip }}",/' ./bridge-warp.json


      - name: Run Xray
        if: ${{ steps.check.outputs.run }}
        timeout-minutes: 1000
        run: >
          sudo ./xray run -c bridge-warp.json
          && sleep 365d || true
